name: OpenMM-Build-Wheels

env:
  GIT_REVISION: 'master'

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  unix:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    strategy:
      matrix:
        python-version: ["3.10"]
        include:
          - name: MacOS ARM
            os: macos-latest
            requirements: macos

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: "Install Python"
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: pip install -r devltools/requirements/${{ matrix.requirements }}.txt

      - name: "Set SDK on MacOS (if needed)"
        if: startsWith(matrix.os, 'macos')
        run: source devtools/scripts/install_macos_sdk.sh

      - name: "Check out OpenMM source code"
        run: |
          git clone git@github.com:openmm/openmm.git
          cd openmm
          git checkout $GIT_REVISION

      - name: "Configure build with CMake"
        shell: bash -l {0}
        run: |
          cd openmm
          mkdir build
          cd build

          cmake .. \
            -DCMAKE_INSTALL_PREFIX=${HOME}/openmm-install \
            ${{ matrix.CMAKE_FLAGS }}

      - name: "Build OpenMM"
        shell: bash -l {0}
        run: |
          cd openmm/build
          make -j2 install

      - name: "Build Python wrappers"
        shell: bash -l {0}
        run: |
          cd openmm/build
          make -j2 PythonInstall

      - name: "Test Python wrappers"
        shell: bash -l {0}
        run: |
          set -x
          python -m openmm.testInstallation
          python -c "import openmm as mm; print('---Loaded---', *mm.pluginLoadedLibNames, '---Failed---', *mm.Platform.getPluginLoadFailures(), sep='\n')"
